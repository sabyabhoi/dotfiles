#include <bits/stdc++.h>
#include <queue>

#define deb(x) cout << #x << " = " << x << endl

#define ull unsigned long long
#define ll long long
#define MOD 1000000007

#define REP(i, n) for(int i = 0; i < (n); ++i)
#define FOR(i, s, n) for(int i = (s); i < (n); ++i)

using namespace std;

struct Node {
  int data;
  struct Node *left;
  struct Node *right;
  
  Node (int x) : data(x), left(nullptr), right(nullptr) {}
  Node (int x, Node *l, Node *r) : data(x), left(l), right(r) {}
};

int height(Node *root) {
  if(root == nullptr) return 0;
  return max(height(root->left), height(root->right)) + 1;
}

int diameter(Node *root) {
  if(root == nullptr) return 0;
  
  int ld = diameter(root->left);
  int rd = diameter(root->right);
  
  int rootd = height(root->left) + height(root->right) + 1;
  return max(max(ld, rd), rootd);
}

void printBFS(Node *root) {
  if(root == nullptr) return;
  queue<Node*> q;
  q.push(root);

  while(!q.empty()) {
    Node *curr = q.front();
    cout << curr->data << ' ';
    if(curr->left != nullptr) q.push(curr->left);
    if(curr->right != nullptr) q.push(curr->right);
    q.pop();
  }
  cout << endl;
}

void deleteTree(Node* head) {
  if(head == nullptr) return;

  deleteTree(head->left);
  deleteTree(head->right);
  delete head;
}

