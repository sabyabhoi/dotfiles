#include <bits/stdc++.h>

#define deb(x) cout << #x << " = " << x << endl

#define MOD 1000000007

#define REP(i, n) for (int i = 0; i < (n); ++i)
#define FOR(i, s, n) for (int i = (s); i < (n); ++i)

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;
typedef vector<string> vs;
typedef vector<vector<string>> vvs;

template <typename T> void print_vec(const vector<T> &v) {
  for (const T &i : v)
    cout << i << ' ';
  cout << '\n';
}

double median(const vi& a, const vi& b) {
  int m = (int) a.size(), n = (int) b.size();
  if(m > n) return median(b, a);
  int mid = (n + m + 1) / 2;

  int l = 0, r = m;
  while(l <= r) {
	int partA = (l + r) / 2;
	int partB = mid - partA;

	int lA = partA <= 0 ? INT_MIN : a[partA - 1];
	int lB = partB <= 0 ? INT_MIN : b[partB - 1];
	int rA = partA >= m ? INT_MAX : a[partA];
	int rB = partB >= n ? INT_MAX : b[partB];

	if(lA <= rB && lB <= rA) {
	  if((m + n) % 2 == 0)
		return (max(lA, lB) + min(rA, rB)) / 2.0;
	  else
		return max(lA, lB);
	} else if(lA > rB) r = partA - 1;
	else if(lB > rA) l = partA + 1;
  }

  return -1;
}

void solve() {
  int m;
  cin >> m;
  vi a(m);
  REP(i, m) cin >> a[i];

  int n;
  cin >> n;
  vi b(n);
  REP(i, n) cin >> b[i];

  cout << median(a, b) << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  solve();
  return 0;
}
