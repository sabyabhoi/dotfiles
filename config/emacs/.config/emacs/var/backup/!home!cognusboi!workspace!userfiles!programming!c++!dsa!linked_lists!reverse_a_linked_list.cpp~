#include <bits/stdc++.h>

#define deb(x) cout << #x << " = " << x << endl

#define MOD 1000000007

#define REP(i, n) for(int i = 0; i < (n); ++i)
#define FOR(i, s, n) for(int i = (s); i < (n); ++i)

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;

template<typename T>
void print_vec(const vector<T>& v) {
  for(const T& i : v) cout << i << ' ';
  cout << '\n';
}

struct Node {
  int data;
  Node *next;

  Node() : data(0), next(nullptr) {}
  Node(int val) : data(val), next(nullptr) {}

  void print() {
    Node *itr = this;
    while (itr != nullptr) {
      cout << itr->data << ' ';
      itr = itr->next;
    }
    cout << '\n';
  }
};

void delete_list(Node *head) {
  Node *curr = head, *nxt;
  while (curr != nullptr) {
    nxt = curr->next;
    delete curr;
    curr = nxt;
  }
}

Node *from_vec(const vector<int> &v) {
  if(v.empty()) return nullptr;
  Node *head = new Node(v[0]);
  Node *tmp = head;
  for (size_t i = 1; i < v.size(); ++i) {
    tmp->next = new Node(v[i]);
    tmp = tmp->next;
  }
  return head;
}

Node* reverse(Node* head) {
  if(head == nullptr || head->next == nullptr)
	return head;

  Node* newHead = reverse(head->next);
  Node* next = head->next;
  next->next = head;
  head->next = nullptr;
  return newHead;
}

void solve() {
  int n; cin >> n;
  vi a(n); REP(i, n) cin >> a[i];
  
  Node* head = from_vec(a);

  head = reverse(head);
  head->print();

  delete_list(head);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int t;
  cin >> t;
  while (t--)
    solve();
  return 0;
}
