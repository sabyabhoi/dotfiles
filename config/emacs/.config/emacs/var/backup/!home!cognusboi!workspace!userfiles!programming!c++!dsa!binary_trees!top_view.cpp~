#include <bits/stdc++.h>
#include "BT.cpp"

#define deb(x) cout << #x << " = " << x << endl
using namespace std;

vector<int> topView(Node* root) {
  vector<int> ans;
  if(root == nullptr) return ans;
  
  queue<pair<int, Node*>> q;
  q.push({0, root});
  
  map<int, int> m;

  while(!q.empty()) {
    auto f = q.front();
    //    if(m.find(f.first) == m.end())
    m[f.first] = f.second->data;
    if(f.second->left != nullptr) q.push({f.first - 1, f.second->left});
    if(f.second->right != nullptr) q.push({f.first + 1, f.second->right});
    q.pop();
  }
  for(auto p : m) {
    ans.push_back(p.second);
  }
  return ans;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  Node* head = new Node(1);
  head->left = new Node(2);
  head->right = new Node(3);
  head->right->left = new Node(4);
  head->right->right = new Node(5);
  
  for(int i : topView(head)) {
    cout << i << ' ';
  };
  cout << '\n';

  deleteTree(head);
  return 0;
}
